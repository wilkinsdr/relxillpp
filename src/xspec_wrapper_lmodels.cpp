/*
   *** AUTOMATICALLY GENERATED: DO NOT EDIT THIS FILE ***   

   This file is part of the RELXILL model code.

   RELXILL is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   any later version.

   RELXILL is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU General Public License for more details.
   For a copy of the GNU General Public License see
   <http://www.gnu.org/licenses/>.

    Copyright 2021 Thomas Dauser, Remeis Observatory & ECAP
       
    *** AUTOMATICALLY GENERATED: DO NOT EDIT THIS FILE ***       
*/

#include "LocalModel.h"

extern "C" void lmodrelline(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relline, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelconv(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relconv, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrellinelp(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relline_lp, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelconvlp(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relconv_lp, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxill(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxill, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxilllp(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxilllp, parameter, flux, Nflux, energy);
} 

extern "C" void lmodxillver(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::xillver, parameter, flux, Nflux, energy);
} 

extern "C" void lmodxillverdensnthcomp(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::xillverCp, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxilldensnthcomp(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxillCp, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxilllpdensnthcomp(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxilllpCp, parameter, flux, Nflux, energy);
} 

extern "C" void lmodxillverns(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::xillverNS, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxillns(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxillNS, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrellinelpext(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relline_ext, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxilllpextdensnthcomp(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxill_ext, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxilllpext(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxill_ext_ecut, parameter, flux, Nflux, energy);
} 

// relxill_emis - xspec model functions
extern "C" void lmodrelline3(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relline3, parameter, flux, Nflux, energy);
}

extern "C" void lmodrellineemis(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::rellineemis, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelconv3(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relconv3, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelconvemis(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relconvemis, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxill3(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxill3, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxillemis(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxillemis, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxilldensnthcomp3(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxillCp3, parameter, flux, Nflux, energy);
} 

extern "C" void lmodrelxilldensnthcompemis(const double *energy, int Nflux, const double *parameter, int spectrum, double *flux, double *fluxError, const char *init) 
{
    xspec_C_wrapper_eval_model(ModelName::relxillCpemis, parameter, flux, Nflux, energy);
}
// -- end
